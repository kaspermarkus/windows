var fluid = require("universal");
var jqUnit = fluid.require("jqUnit");
var regSH = require("../src/RegistrySettingsHandler");
var windows = fluid.registerNamespace("gpii.windows");

jqUnit.module("RegistrySettingsHandler Module");

jqUnit.test("Reading and writing registry keys", function () {
    jqUnit.expect(3);
    
    var dwordValue = 100;
    windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "Magnification", dwordValue, "REG_DWORD");
    var value = windows.readRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "Magnification", "REG_DWORD");
    jqUnit.assertEquals("Assert REG_DWORD", dwordValue, value.value);

    var unicodeString = "I am Agent Гюнтер";
    windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "MagnificationAnnotation", unicodeString, "REG_SZ");
    var value2 = windows.readRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "MagnificationAnnotation", "REG_SZ");
    jqUnit.assertEquals("Assert REG_SZ", unicodeString, value2.value);
    
    windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "MagnificationBinary", "0a, b0, cAfebAbe", "REG_BINARY");
    var value3 = windows.readRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier", "MagnificationBinary", "REG_BINARY");
    jqUnit.assertEquals("Assert REG_BINARY", "0a b0 ca fe ba be", value3.value);
    
    // clean up after ourselves
    windows.deleteRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier");
});


jqUnit.test("windows.registrySettingsHandler.set", function () {
    fluid.each(tests, function (testSpec) {
        //initial registry values:
        windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier2", "setting1", 50, "REG_DWORD");
        windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier2", "setting2", "sabretooth tiger", "REG_DWORD");
        
        //test return payload
        var returnPayload = windows.registrySettingsHandler.set(testSpec.set.payload);
        jqUnit.assertDeepEq(testSpec.name + ": Checking return payload for simple XML file: ", testSpec.set.expectedResult, returnPayload);
    });
});

jqUnit.test("windows.registrySettingsHandler.get", function () {
    fluid.each(tests, function (testSpec) {
        //initial registry values:
        windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier2", "setting1", 50, "REG_DWORD");
        windows.writeRegistryKey("HKEY_CURRENT_USER", "Software\\GPIIMagnifier2", "setting2", "sabretooth tiger", "REG_DWORD");
        
        //test return payload
        var returnPayload = windows.registrySettingsHandler.get(testSpec.get.payload);
        jqUnit.assertDeepEq(testSpec.name + ": Checking return payload for simple XML file: ", testSpec.get.expectedResult, returnPayload);
    });
});

var tests = {
        basicTest: {
            name: "Basic registry test"
            set: {
                payload: {
                    "random.registry.app": [{ 
                        options: {
                            hKey: "HKEY_CURRENT_USER",
                            path: "Software\\GPIIMagnifier2"
                        },
                        settings: {
                            "setting1": { 
                                value: 100,
                                dataType: "REG_DWORD"
                            },
                            "setting2": {
                                value: "hello kitty",
                                dataType: "REG_DWORD"
                            }
                        }
                    }]
                }, 
                expectedResult: {
                    "random.registry.app": [{
                        options: {
                            hKey: "HKEY_CURRENT_USER",
                            path: "Software\\GPIIMagnifier2"
                        },
                        settings: {
                            "setting1": {
                                newValue: { 
                                    value: 100,
                                    dataType: "REG_DWORD",
                                    statusCode: 200
                                },
                                oldValue: { 
                                    value: 50,
                                    dataType: "REG_DWORD",
                                    statusCode: 200
                                },
                                statusCode: 200
                            },
                            "setting2": {
                                newValue: { 
                                    value: "hello kitty",
                                    dataType: "REG_DWORD",
                                    statusCode: 200
                                },
                                oldValue: { 
                                    value: "sabretooth tiger",
                                    dataType: "REG_DWORD",
                                    statusCode: 200
                                },
                                statusCode: 200
                            }
                        }
                    }]
                }
            },
            get: {
                payload: {
                    "random.registry.app": [{ 
                        options: {
                            hKey: "HKEY_CURRENT_USER",
                            path: "Software\\GPIIMagnifier2"
                        },
                        settings: {
                            "setting1": {
                                dataType: "REG_DWORD"
                            },
                            "setting2": {
                                dataType: "REG_DWORD"
                            },
                            "setting3": {
                                dataType: "REG_DWORD"
                            }
                        }
                    }]
                },
                expectedResult: {
                    "random.registry.app": [{
                        options: {
                            hKey: "HKEY_CURRENT_USER",
                            path: "Software\\GPIIMagnifier2"
                        },
                        settings: {
                            "setting1": {
                                value: 50,
                                dataType: "REG_DWORD"
                            },
                            "setting2": {
                                value: "sabretooth tiger",
                                dataType: "REG_DWORD"
                            },
                            "setting3": {
                                value: undefined,
                                dataType: "REG_DWORD"
                            }
                        }
                    }]
                }
            }
        }
    }
};
